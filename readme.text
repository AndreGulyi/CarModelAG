#############  1.Environment Setup    ##################

    1.Create a Virtual Environment:
    python3 -m venv carEnv

    2.Activate the Environment:
    source carEnv/bin/activate

    3.Install Dependencies:
    pip install ultralytics torch torchvision pandas pillow scikit-learn reportlab matplotlib tabulate tensorflow


######### 2. Testing Instructions ########

    1. open conf.yaml file
    2. modify with actual paths:
        a) TEST_FOLDER
        b) OUTPUT_CSV_PATH
    3. run test_predict.py with command "python test_predict.py"
    4. output will save in given filepath in 2.b) step

#########  3. Training the model  #######
    1. open conf.yaml file
    2. modify with actual paths:
        a) DATASET_PATH

    ##### 3.1 Train CAR_PARTS_SEG_MODEL

    3. hypertuning paramanrer
        a) CAR_PARTS_SEG_MODEL_TRAINING_EPOCHS
        b) CAR_PARTS_SEG_MODEL_BATCH
    4*. run train_cart_parts_seg_yolo_model.py with command "python train_cart_parts_seg_yolo_model.py"
        a) this will remove left and right differences(leftHeadLamp --> headlLamp) with passing is_no_direction=True param and create create new yolo dataset  "_car_parts_poly_dataset_"
        b) train the yolo model
        c) export tflight model in  yolo_model/carparts_poly<latest_version_no>/weights/best_saved_model/best_float16.tflite  or  best_float32.tflite
    5*. copy tflight model path best_float16.tflite or best_float32.tflite
    6*. open conf.yaml file and modify with path CAR_PARTS_SEG_TF_LIGHT_MODEL_PATH

    ###  3.2 Train CLASSIFY_MODE ######
    7. open carparts_vs_category_graph_config.yaml review CATEGORY_RULES for how category is set in given dataset based on major parts
    8. in given dataset many images not been labeled properly i.e missed labeling major parts, so it not mapped to any category, those are consider a invalid data
    9. option steps: hypertuning paramanrer
        a) CLASSIFY_MODEL_EPOCHS
        b) CLASSIFY_MODEL_BATCH
    10*. run train_calssify_yolo_model.py.py with command "python train_calssify_yolo_model.py.py"
        a) preparing dataset : it will crop and generate combined image of major parts. and labeled as category based on CATEGORY_RULES. output dataset path "_car_parts_crop_dataset"
        b) train the yolo model
        c) export tflight model in  yolo_model/CLASSIFY_MODEL<latest_version_no>/weights/best_saved_model/best_float16.tflite  or  best_float32.tflite
    11*. copy tflight model path best_float16.tflite or best_float32.tflite
    12. open conf.yaml file and modify with path CLASSIFY_MODE_PATH


######## 4. Eval dataset   #######
    1. It will take this DATASET_PATH from conf.yaml
    2. run the eval_dataset.py with the command "python eval_dataset.py"
    3. review  the F1 score



    ### Metrics insights  #####
        Success: 1053, Failed: 266, Total: 1319

        Metrics sorted by F1 Score:
        Character      F1 Score    Precision    Recall
        -----------  ----------  -----------  --------
        front              0.94         0.90      1.00
        rear               0.92         0.86      0.99
        leftRear           0.65         0.70      0.60
        rightRear          0.63         0.88      0.49
        rightFront         0.47         0.72      0.35
        leftFront          0.46         0.63      0.36

        F1 Score: 0.79

        Success: 1053, Failed: 266, Total testing: 1319
        Accuracy: 79.83%
